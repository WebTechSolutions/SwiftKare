@using WebApp.Helper;

<!DOCTYPE html>
<html>
<head>
    <script src="@Url.Content("~/Scripts/Formatdate.js")"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>@ViewBag.Title - @WebApp.Models.AppSettings.AppName</title>
    <!-- <link href="css/bootstrap.min.css" rel="stylesheet"> -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" />
    <!-- Font Awesome -->
    <link href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">
    <link href="@Url.Content("~/Content/css/font-awesome.min.css")" rel="stylesheet">
    <!-- Custom Theme Style -->
    <link href="@Url.Content("~/Content/css/custom.min.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/css/style.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/css/select2.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/css/pnotify.css")" rel="stylesheet">
    <link href="@Url.Content("/Content/css/green.css")" rel="stylesheet" />
    <link href="@Url.Content("/Content/css/switchery.min.css")" rel="stylesheet" />
    <link href="@Url.Content("/Content/css/dataTables.bootstrap.min.css")" rel="stylesheet" />

    <link href="@Url.Content("/Content/css/bootstrap-material-datetimepicker.css")" rel="stylesheet" />


    <script src="https://code.jquery.com/jquery-1.12.3.min.js" integrity="sha256-aaODHAgvwQW1bFOGXMeX+pC4PZIPsvn2h1sArYOhgXQ=" crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
    @*<script type="text/javascript" src="https://rawgit.com/FezVrasta/bootstrap-material-design/master/dist/js/material.min.js"></script>*@
    @*<script type="text/javascript" src="https://momentjs.com/downloads/moment-with-locales.min.js"></script>*@
    <script type="text/javascript" src="@Url.Content("~/Scripts/moment-with-locales.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/custom.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/pnotify.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.cropit.js")"></script>
    <script src="@Url.Content("~/Scripts/icheck.min.js")"></script>
    <script src="@Url.Content("~/Scripts/select2.min.js")"></script>
    <script src="@Url.Content("~/Scripts/material.min.js")"></script>
    <script src="@Url.Content("~/Scripts/daterangepiker/daterangepicker.js")"></script>
    <script src="@Url.Content("~/Scripts/blockUI.js")"></script>
    <script src="@Url.Content("~/Scripts/general.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.cookie.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.signalR-2.2.1.min.js")"></script>

    <script src="@Url.Content("~/signalr/hubs")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.dataTables.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/dataTables.bootstrap.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/dataTables.buttons.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/dataTables.responsive.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.smartWizard.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/switchery.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/bootstrap-material-datetimepicker.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/bootstrap-wysiwyg.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.hotkeys.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/eModal.min.js")"></script>



    <style type="text/css">
        .redBorder, .redBorder:focus, .redBorder:active {
            border-color: red;
        }

        /* Spinner */
        .spinner {
            width: 50px;
            height: 50px;
            display: inline-block;
            padding: 0px;
            border-radius: 100%;
            border: 6px solid;
            border-top-color: #005a9c;
            border-bottom-color: #005a9c;
            border-left-color: rgba(0, 90, 156, 0.15);
            border-right-color: rgba(0, 90, 156, 0.15);
            -webkit-animation: spinner 0.8s ease-in-out infinite alternate;
            animation: spinner 0.8s ease-in-out infinite alternate;
        }

        @@keyframes spinner {
            from {
                -webkit-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            to {
                -webkit-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@-webkit-keyframes spinner {
            from {
                -webkit-transform: rotate(0deg);
            }

            to {
                -webkit-transform: rotate(360deg);
            }
        }
    </style>
</head>

<body class="nav-md footer_fixed">
    <div style="display:none">
        <input type="text" id="receiverConnectionId" value="" style="display:none;" />
        Please select the doctor before calling...
        <select id="ddlAvailableDoctors"></select>

        <input type="button" id="sendmessage" value="Call to Doctor" />
    </div>
    <div class="container body" style="background-color: #2a3f54;">
        <div class="main_container" main_container>
            <div class="col-md-3 left_col menu_fixed">
                <div class="left_col scroll-view">
                    <div class="navbar nav_title" style="border: 0;">
                        <a href="index.html" class="">
                            <i><img class="img-responsive bk-c-w" src="~/Content/images/Logos.png" /></i>
                            <span><img class="img-responsive bk-c-w" src="~/Content/images/Logo-heart.png" /></span>
                        </a>
                    </div>
                    <div class="clearfix"></div>
                    <br />
                    <!-- menu profile quick info -->
                    <div class="profile m-b-60">
                        <div class="profile_pic">
                            <a href="@Url.Action("Profile","PatientProfile")">
                                <img src="@SessionHandler.ProfilePhoto" alt="..." class="img-circle profile_img">
                            </a>
                        </div>
                        <div class="profile_info" style="word-break:break-word">
                            <span>Welcome,</span>
                            <h2>@SessionHandler.UserInfo.title&nbsp;@SessionHandler.UserInfo.FirstName&nbsp;@SessionHandler.UserInfo.LastName</h2>
                        </div>
                    </div>
                    <!-- /menu profile quick info -->
                    <br />
                    <!-- sidebar menu -->
                    <div id="sidebar-menu" class="main_menu_side hidden-print main_menu">
                        <div class="menu_section">
                            <ul class="nav side-menu" style="margin-top: 10px;">
                                <li class="scheduler" style="border-top: 1px solid !important;">
                                    <a href="@Url.Action("Index","Appointment")"><img src="~/Content/images/appointments.png" alt=""> &nbsp <span class="menu-txt"> Appointment</span></a>

                                </li>
                                <li class="doctor">
                                    <a href="@Url.Action("SeeDoctor", "SeeDoctor")" onclick="localStorage.setItem('flag', 1);"><img src="~/Content/images/icon_doc_search.png" alt="">  &nbsp <span class="menu-txt">See a doctor</span> </a>
                                </li>
                                <li class="call_history">
                                    <a href="@Url.Action("SeeDoctor", "SeeDoctor")" onclick="localStorage.setItem('flag', 0);"><img src="~/Content/images/my-doctors1.png" alt="">  &nbsp <span class="menu-txt">My Care Team</span> </a>
                                </li>
                                <li class="appointment">
                                    <a href="@Url.Action("Index","Consultation")"><img src="~/Content/images/history.png" alt=""> &nbsp <span class="menu-txt"> Consult History</span></a>

                                </li>
                                <li class="patient">
                                    <a href="@Url.Action("Index","MyHealth")"><img src="~/Content/images/my-health.png" alt=""> &nbsp <span class="menu-txt">My Health</span> </a>
                                </li>
                                <li class="message">
                                    <a href="@Url.Action("Index","PatientFiles")"><img src="~/Content/images/my-files.png" alt=""> &nbsp <span class="menu-txt">My Files</span> </a>
                                </li>
                                @*<li class="call_history">
                                        <a href="#"><img src="~/Content/images/my-doctors1.png" alt="">  &nbsp <span class="menu-txt">My Doctors</span> </a>
                                        <ul class="nav child_menu">
                                            <li><a href="#">Dashboard</a></li>
                                        </ul>
                                    </li>*@
                                <li class="whats_news">
                                    <a href="@Url.Action("Index","News")"><img src="~/Content/images/whats-new.png" alt="">  &nbsp <span class="menu-txt">Whats New</span> </a>
                                </li>
                                <li class="help_ticket">
                                    <a href="@Url.Action("Index","HelpTicket")">
                                        <i alt="" class="fa fa-send-o" style="color: #ff6000;font-weight:bold;"></i> &nbsp;<span class="menu-txt">Help Ticket</span>
                                    </a>
                                </li>

                            </ul>
                        </div>
                    </div>
                    <div class="sidebar-footer hidden-small" style="background: #172D44;">
                        <a data-toggle="tooltip" data-placement="top" title="My Profile" href="@Url.Action("Index","PatientProfile")">
                            <span class="glyphicon glyphicon-cog" aria-hidden="true"></span>
                        </a>

                        <a data-toggle="tooltip" data-placement="top" title="FullScreen" onclick="toggleFullScreen();">

                        </a>
                        <a data-toggle="tooltip" data-placement="top" title="Create Help Ticket">

                        </a>
                        @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
                        {
                            @Html.AntiForgeryToken()
                            <a data-toggle="tooltip" data-placement="top" title="Logout"
                               href="javascript:document.getElementById('logoutForm').submit()">
                                <span class="glyphicon glyphicon-off" aria-hidden="true"></span>
                            </a>
                        }
                    </div>
                    <!-- /sidebar menu -->
                </div>
            </div>
            <!-- top navigation -->
            <div class="top_nav">
                <div class="nav_menu">
                    <nav>
                        <div class="nav toggle">
                            <a id="menu_toggle"><i class="fa fa-bars"></i></a>
                        </div>
                        <ul class="nav navbar-nav navbar-right">
                            <li class="">
                                <a href="javascript:;" class="user-profile dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                    <img src="@SessionHandler.ProfilePhoto" alt="">@SessionHandler.UserName
                                    <span class="fa fa-angle-down"></span>
                                </a>
                                <ul class="dropdown-menu dropdown-usermenu pull-right">
                                    <li><a href="@Url.Action("Index","PatientProfile")">My Profile</a></li>

                                    <li><a href="@Url.Action("Index","HelpTicket")">Create Help Ticket</a></li>
                                    <li>
                                        <a href="javascript:document.getElementById('logoutForm').submit()">
                                            <i class="fa fa-sign-out pull-right"></i>
                                            Log Out
                                        </a>
                                    </li>
                                </ul>
                            </li>


                            <li id="alertview" role="presentation" class="dropdown">

                                @{
                                    Html.RenderAction("AlertView", "Alert");
                                }

                            </li>



                        </ul>
                    </nav>
                </div>
            </div>

            @RenderBody()

            <!-- /top navigation -->
            <!-- saeed-style-here-start -->
            <!-- saeed-style-here-end -->
            <!-- footer content -->
            <footer>
                <div class=" bdr-l">
                    <div class="row">
                        <div class="col-md-12 text-center">
                            <p>
                                Copyright &copy;
                                <script language="JavaScript" type="text/javascript">document.write((new Date()).getFullYear());</script><a href="#">SwiftKare</a>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
            </footer>
            <!-- /footer content -->

        </div>
    </div>
    <div class="modal fade" id="playoutModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1">
        <div class="modal-dialog" role="document" style="width: 350px;">
            <div class="modal-content" style="border-radius: 0;">
                <div class="modal-header text-center" style="background: #E4F1FE; border-bottom-color: #c3bebe;">
                    <h2 style="margin: 0; color: #337ab7" id="heading"><b></b></h2>
                </div><!--/.modal header-->
                <div class="modal-body text-left" style="text-align:center;">
                    <p class="text-center" style="color: #375781;" id="bodytext"></p>
                    <button style="width: 29%; border-radius: 0; padding: 15px -15px; font-size: 20px;" onclick="$('#playoutModal').modal('hide')" type="button" class="btn btn-primary">OK</button>
                </div><!--/.modal body-->
            </div>
        </div>
    </div><!-- mymodal1 -->

    <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1">
        <div class="modal-dialog" role="document" style="width: 500px;">
            <div class="modal-content" style="border-radius: 0;">
                <div class="modal-header text-center" style="background: #E4F1FE; border-bottom-color: #c3bebe;">
                    <h2 style="margin: 0; color: #337ab7" id="heading"><b>Update your timezone</b></h2>
                </div><!--/.modal header-->
                <div class="modal-body text-left" style="text-align:center;">
                    <div class="row">
                        <label class="control-label" style="margin-left:-361px;margin-bottom:5px">
                            Select Time Zone<span class="required">*</span>
                        </label>
                        <div>
                            <span id="spnErrorTimeZone" style="display:none; color:red; float:right;margin-bottom:5px">TimeZone is required</span>

                        </div>
                        <select class="form-control" id="Timezone" style="margin-bottom:5px">
                            <option value="">ALL</option>

                        </select>


                    </div>
                    <button style="width: 29%; border-radius: 0; padding: 15px -15px; font-size: 20px;" onclick="updateTimeZone();" type="button" class="btn btn-primary">Save</button>
                </div><!--/.modal body-->
            </div>
        </div>
    </div><!-- mymodal2 -->
    <script>
        
        setInterval(function () {

            $.ajax({
            url: "@Url.Action("AlertView", "Alert")",
            type: 'POST',
            dataType: 'html',
            cache: false,
            success: function (html) {
                //console.log($("#alertview").html());
                $("#alertview").html(html);
            }


            });
           
        }, 60*1000);

        @*function checkSession()
        {
          window.location.href = '@Url.Action("PatientLogin","Account")';
           
        }*@
        var mymodal = $('#playoutModal');
    function showAlert(heading,body)
    {

        mymodal.find('#heading').text(heading);
        mymodal.find('#bodytext').text(body);
        mymodal.modal('show');
    }
    </script>

    @* <script src="~/Scripts/jquery.cookie.js"></script>
        <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
        <script src="@Url.Content(" ~/signalr/hubs")"></script>*@

    <script type="text/javascript">


        // Proxy created on the fly
      /*  var chat;
        if (localStorage.getItem('chat') == null)
        {
            chat = $.connection.chatHub;
            localStorage.setItem('chat', chat);
            console.log("chathub connected created");
        }
        else
        {
            chat = localStorage.getItem('chat');
            console.log("chathub connected restored");
        }*/

      var  chat = $.connection.chatHub;

        var senderConnectionId;
        var found = false;

        var availableDoctors = {
            doctor: [
                {
                    connectionId: "",
                    firstName: "",
                    lastName: "",
                    userName: "",
                    docId: null
                }
            ]
        };

        var busyDoctors = {
            doctor: [
                {
                    connectionId: "",
                    firstName: "",
                    lastName: "",
                    userName: "",
                    docId: null
                }
            ]
        };


        function checkAnyDoctorAvailableNow() {

            $(".clsDivDocList .clsAvailbleForCall").hide();

            $(".clsDivDocList .clsNotAvailbleForCall").show();

            $(".clsDivDocList .clsMakeCall").hide();
            $(".clsDivDocList .clsNotMakePhone").show();

            $(".clsDivDocList .clsAvailableSpot").css('color', 'red');


            for (var i = 0; i < availableDoctors.doctor.length; i++) {
                if ($(".clsDivDocList .clsMakeCall[data-doctorid = " + availableDoctors.doctor[i].docId + "]").length > 0) {

                    var elem = $(".clsDivDocList .clsMakeCall[data-doctorid = " + availableDoctors.doctor[i].docId + "]");
                    elem.show();

                    elem.data("connId", availableDoctors.doctor[i].connectionId);

                    elem.closest(".clsDivDocList").find(".clsNotMakePhone").hide();

                    elem.closest(".clsDivDocList").find(".clsNotAvailbleForCall").hide();
                    elem.closest(".clsDivDocList").find(".clsAvailbleForCall").show();
                    elem.closest(".clsDivDocList").find(".clsAvailableSpot").css('color', 'green');
                }
            }
        }

        function getReceiverConnectionId(receiverConnectionId) {
            $("input[id$='receiverConnectionId']").val(receiverConnectionId);
        }
        var appType = "";
        function setAppType(type) {
            appType = type;
        }
        function makeCallToDoctor(e) {
            showAlert("Alert", "Please wait , we are taking doctor consent for the consult.");
            setAppType("L");
            var docId = $(e).attr("data-doctorid");

            var oDocInfo = null;
            for (var i = 0; i < availableDoctors.doctor.length; i++) {
                if (availableDoctors.doctor[i].docId == docId) {
                    oDocInfo = availableDoctors.doctor[i];
                    break;
                }
            }

            setDoctorID($(e).attr("data-doctorid"));

            var curElem = $(e);

            //Log Call Info - Starts
            var cCallLogUrl = '@Url.Action("PatientCallDoctor", "UserChat")?doctorId=' + $(e).attr("data-doctorid");
            $.post(cCallLogUrl);
            //Log Call Info- Ends

            chat.server.sendMessageToDoctor(
            {
                SenderId: '@SessionHandler.UserInfo.Id',
                UserName: '@SessionHandler.UserInfo.Email',
                ReceiverConnectionId: oDocInfo.connectionId,
                ReceiverId: docId,
                DoctorName: oDocInfo.firstName + ' ' + oDocInfo.lastName,
                PatientName: '@(SessionHandler.UserInfo.FirstName + " " + SessionHandler.UserInfo.LastName)',
                SenderType: 'Patient',
                Message: JSON.stringify({ status: 'call', name: '@(SessionHandler.UserInfo.FirstName + " " + SessionHandler.UserInfo.LastName)' }),
                UserGroup: 'doctors'
            });
        }
        @*function makeCallToPatient(e) {
            //setDoctorID($(e).attr("data-doctorid"));
            var curElem = $(e);
            var DoctorName = 'Dr. ' + '@SessionHandler.UserInfo.FirstName' + ' ' + '@SessionHandler.UserInfo.LastName';
            //alert("calling");

            chat.server.SendMessageToPatient(
            {
                SenderId: '@SessionHandler.UserInfo.Id',
                UserName: '@SessionHandler.UserInfo.Email',
                ReceiverConnectionId: curElem.data("connId"),
                ReceiverId: '20',make
                SenderType: 'Doctor',
                Message: JSON.stringify({ status: 'call', name: DoctorName }),
                UserGroup: 'doctors'
            });
        }*@

        $(function () {

            chat.client.receiveMessage = function (msgFrom, msg, senderConnId, senderid) {
                if (msgFrom != "ChatHub") {
                    debugger;
                    var msgJson = JSON.parse(msg);
                 //   alert(msgJson.status);
                    if (msgJson.status == 'tokbox') {
                      //  alert('tokbox info recieved:' + msgJson.name);
                        localStorage.setItem('tokbox', msgJson.name);
                        return;
                    }
                    if (msgJson.status == 'consultID') {
                      //  alert('consultID recieved:' + msgJson.name);
                        localStorage.setItem('consultationKey', msgJson.name);
                        localStorage.setItem('otherUser', msgFrom);
                        return;
                    }
                    if (msgJson.status == 'Accepted') {
                        localStorage.setItem('otherUser', msgFrom);
                        showAlert('Alert', "Doctor " + msgJson.name + " accepted your request please continue with payment process.");
                        //alert("Doctor " + msgJson.name + " accepted your request please continue with payment process.");
                        $('#wizard').smartWizard('goToStep', 2);
                        $('.buttonNext').show();
                        $('.buttonPrevious').show();
                        //Save SignalR Information to local storage so that it can be used whenever needed.
                        var signalRInfo = {
                            SenderId: '@SessionHandler.UserInfo.Id',
                            UserName: '@SessionHandler.UserInfo.Email',
                            ReceiverConnectionId: $('#ddlAvailableDoctors').val(),
                            ReceiverId: senderid,
                            RecipientName: msgJson.name
                        }

                        var strSignalRInfo = window.JSON.stringify(signalRInfo);
                        localStorage.setItem('signalRInfo', strSignalRInfo);
                    } else {
                        showAlert('Alert', 'Sorry! Doctor ' + msgJson.name + ' is not available now for consultation call.');
                        //alert("Sorry! Doctor " + msgJson.name + " is not available now for consultation call.");
                    }
                }
            };


            chat.client.incomingCallFromDoctor = function (msgFrom, msg, senderConnId, senderid, consultID, docName) {
                debugger;
                var msgJson = JSON.parse(msg);

                //var isPatientAcceptedCall = confirm('Doctor ' + msgJson.name + ' want to have consultation with you. Press OK to proceed.');
                var options = {
                    message: 'Doctor ' + msgJson.name + ' want to have consultation with you. Press OK to proceed.',
                    title: 'Doctor is Calling',
                    size: eModal.size.lg
                    };
                eModal.confirm(options)
                .then(function () {
                    var cCallLogUrl = '@Url.Action("PatientAcceptedCall", "UserChat")?doctorId=' + senderid;
                    //  $.post(cCallLogUrl);

                    var cUrlReadyForCall = "@Url.Action("ReadyForCall","UserChat")?senderId=@SessionHandler.UserInfo.Id&userType=Patient&receiverId=" + senderid + "&doctorName=" + docName + "&patientName=@(SessionHandler.UserInfo.FirstName + " " + SessionHandler.UserInfo.LastName)&ConsultID=" + consultID;

                    $.post(cUrlReadyForCall, function (oResp) {
                        //oResp is    SessionId*TokenId
                        debugger;
                        if (oResp != "0") {
                            //send message to patient about confirmation
                            chat.server.patientAcceptedCall({
                                SenderId: '@SessionHandler.UserInfo.Id',
                                PatientName: '@(SessionHandler.UserInfo.FirstName + " " + SessionHandler.UserInfo.LastName)',
                                ReceiverConnectionId: senderConnId,
                                consultID: consultID,
                                UserName: '@SessionHandler.UserInfo.Email'
                            });
                            //Log Tokbox info generated event
                            var cCallLogUrl = '@Url.Action("TokBoxInfoCreatedbyPatient", "UserChat")?doctorId=' + senderid;
                            $.post(cCallLogUrl);

                            var tokboxInfo = oResp;
                            localStorage.setItem('tokbox', tokboxInfo);

                            chat.server.patientRedirectedToCall
                                (senderConnId, tokboxInfo, '@SessionHandler.UserInfo.Id', '@(SessionHandler.UserInfo.FirstName + " " + SessionHandler.UserInfo.LastName)');

                            //Redirect doctor to call
                            window.location = '@Url.Action("Index","UserChat")?tokboxInfo=' + tokboxInfo;

                        }
                        else {
                            //Log Tokbox info generated event
                            var cCallLogUrl = '@Url.Action("TokBoxInfoCreationFailedbyPatient", "UserChat")?doctorId=' + senderid;
                            $.post(cCallLogUrl);
                            new PNotify({ title: 'Error', text: 'Err in getting tokbox info ', type: 'error', styling: 'bootstrap3' });

                            chat.server.patientRejectedCall({
                                SenderId: '@SessionHandler.UserInfo.Id',
                                PatientName: '@(SessionHandler.UserInfo.FirstName + " " + SessionHandler.UserInfo.LastName)',
                                ReceiverConnectionId: senderConnId,
                                consultID: consultID,
                                UserName: '@SessionHandler.UserInfo.Email'
                            });
                            return;
                        }
                    });},
                    function () {
                        var cCallLogUrl = '@Url.Action("PatientDeclinedCall", "UserChat")?doctorId=' + senderid;
                        //   $.post(cCallLogUrl);
                        chat.server.patientRejectedCall({
                            SenderId: '@SessionHandler.UserInfo.Id',
                            UserName: '@(SessionHandler.UserInfo.FirstName + " " + SessionHandler.UserInfo.LastName)',
                            ReceiverConnectionId: senderConnId,
                            consultID: consultID
                        });
                        return;
                    });

                //if (isPatientAcceptedCall) {



                //}
                //else {

                //}



            };



            // Declare a function on the chat hub so the server can invoke it
            chat.client.showConnected = function (message) {
                debugger;
                availableDoctors.doctor = [];
                busyDoctors.doctor = [];


                console.log(message);

                for (var i = 0; i < message.length; i++) {
                    console.log(message[i].Value.UserType);
                    if (message[i].Value.UserID != -1) //-1 means doctor is bussy with other call
                    {
                        availableDoctors.doctor.push({
                            connectionId: message[i].Key,
                            firstName: message[i].Value.FirstName,
                            lastName: message[i].Value.LastName,
                            userName: message[i].Value.UserName,
                            docId: message[i].Value.Id
                        });
                    }
                    else {
                        busyDoctors.doctor.push({
                            connectionId: message[i].Key,
                            firstName: message[i].Value.FirstName,
                            lastName: message[i].Value.LastName,
                            userName: message[i].Value.UserName,
                            docId: message[i].Value.Id
                        });
                    }
                }

                //$.each(message, function (index, value) {
                //    $.each(message, function (index, value1) {
                //        availableDoctors.doctor.push({
                //            connectionId: value1.Value.ConnectionId,
                //            firstName: value1.Value.FirstName,
                //            lastName: value1.Value.LastName,
                //            userName: value1.Value.UserName,
                //            docId: value1.Value.Id
                //        });
                //    });
                //});

                checkAnyDoctorAvailableNow();

            };

            // Start the connection
            $.connection.hub.logging = true;
            $.connection.hub.start().done(function () {
                var id = $.cookie('Id');
                debugger;
                chat.server.join(
                    {
                        Id: '@SessionHandler.UserInfo.Id',
                        UserName: '@SessionHandler.UserInfo.Email',
                        FirstName: '@SessionHandler.UserInfo.FirstName',
                        LastName: '@SessionHandler.UserInfo.LastName',
                        UserType: 'Patient'
                    }).done(function () {
                        console.log("New patient has joined... invoke all doctors event");
                        chat.server.getUsersDoctor();
                    });

               /* chat.server.adminJoin().done(function () {
                    //alert("New doctor has joined... Refresh list;");
                    chat.server.getUsersPatient();
                    chat.server.getUsersDoctor();
                });*/

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.sendMessageToDoctor(
                    {
                        SenderId: '@SessionHandler.UserInfo.Id',
                        UserName: '@(SessionHandler.UserInfo.FirstName + " " + SessionHandler.UserInfo.LastName)',
                        ReceiverConnectionId: $('#ddlAvailableDoctors').val(),
                        ReceiverId: '20',
                        SenderType: 'Patient',
                        Message: JSON.stringify({ status: 'call', name: 'Patient' }),
                        UserGroup: 'doctors'
                    });
                    // Clear text box and reset focus for next comment.
                });
            });
        });


    </script>
    <script>
        $(document).ajaxSuccess(function (evt, request, settings) {
             if (request.response != null) {
                if (request.response.redirectUrl != null)
                    window.location.href = request.response.redirectUrl;
            }
        });
        function errorRes(data) {
            new PNotify({
                title: 'Error',
                text: data.Message,
                type: 'error',
                styling: 'bootstrap3'
            });
        }

        $('#menu_toggle').click(function () { if (document.body.className == "nav-md footer_fixed") { ($("body").attr("class", "nav-sm footer_fixed")); $('.fa-angle-down').show(); } else { $("body").attr("class", "nav-md footer_fixed"); } });
        $('.menu_section li').hover(
       function () { $(this).addClass('current-page') },
       function () { $(this).removeClass('current-page') })
    </script>
   
    <script>

        $('#myModal2').find('#Timezone').change(function () {
            if ($('#myModal2').find("#spnErrorTimeZone").is(":visible") && $('#myModal2').find("#Timezone").val() != "") {
                $('#myModal2').find("#Timezone").removeClass("redBorder");
                $('#myModal2').find("#spnErrorTimeZone").hide();
            }
        });
        $(document).ready(function () {
            
            if ('@SessionHandler.ProfilePhoto' == '')
            {
                if(!parent.location.href.toLowerCase().includes('profile'))
                {
                    window.location.href = '@Url.Action("Index", "PatientProfile")';
                }
            }

            if ('@SessionHandler.ProfilePhoto' != '')
            {
            
                if ('@SessionHandler.UserInfo.timeZoneOffset' == '' ||
                    '@SessionHandler.UserInfo.timeZoneOffset' != new Date().getTimezoneOffset().toString())
                {

                    var param = "{}";
                    var listitems;
                    var $select = $('#myModal2').find('#Timezone');
                    $.ajax({
                        type: 'POST',
                        url: '/Appointment/GetTimeZones',
                        data: param,
                        dataType: 'json',
                        success: function (response) {
                            $.each(response.Object, function (item) {
                                listitems += '<option value=' + response.Object[item].zoneid + '>' + response.Object[item].timeZonee + '</option>';

                            });
                            $select.append(listitems);
                        },
                        error: errorRes

                    });
                    //$('#myModal2').modal('show');
                    $('#myModal2').modal({ backdrop: 'static', keyboard: false });
                }

            }

        });
        function errorRes(httpObj) {
            //function (httpObj, textStatus) {
            var messages = $.parseJSON(httpObj.getResponseHeader('X-Responded-JSON'));
            if (messages != undefined && messages != null) {
                if (messages.status == 401) {
                    //window.location.href = "/Account/PatientLogin";
                    new PNotify({
                        title: 'Error',
                        text: "Unauthorize access",
                        type: 'error',
                        styling: 'bootstrap3'
                    });
                }
            }
            else {

                new PNotify({
                    title: 'Error',
                    text: messages.statusText,
                    type: 'error',
                    styling: 'bootstrap3'
                });
            }


        }
        function updateTimeZone()
        {
            if ($('#myModal2').find('#Timezone').val() == "") {

                $("#Timezone").addClass("redBorder").focus();
                $("#spnErrorTimeZone").show();
                return;
            }
            var tz = $('#myModal2').find('#Timezone');

            $.ajax({
                url: '@Url.Action("UpdateTimezone", "Appointment")',
                type: "POST",
                data: { 'zoneid': $('#myModal2').find('#Timezone').val() },
                dataType: 'json',
                success: function (result) {
                    //Reload container
                    if (result.Message != undefined) {
                        new PNotify({ title: 'Error', text: result.Message.ReasonPhrase, type: 'error', styling: 'bootstrap3' });
                        hideLoader();
                    }
                    else {

                        if (result.ApiResultModel.message == "") {
                            new PNotify({ title: 'Success', text: "Timezone is updated successfully.", type: 'info', addclass: 'dark', styling: 'bootstrap3' });
                            hideLoader();

                        }
                        else {
                            new PNotify({ title: 'Error', text: result.ApiResultModel.message, type: 'error', styling: 'bootstrap3' });
                            hideLoader();

                        }


                    }

                },
                error: function (err) {
                    //alert(err.statusText);
                    new PNotify({ title: 'Error', text: err.statusText, type: 'error', styling: 'bootstrap3' });
                    //Stop displaying loader
                    hideLoader();
                }
            });
            $('#myModal2').modal('hide');
        }
    </script>
    @RenderSection("scripts", required: false)

</body>
</html>
