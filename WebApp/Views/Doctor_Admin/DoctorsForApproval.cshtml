@model IEnumerable<DataAccess.Doctor>
 
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

  
            <div class="page-title">
              <div class="title_left">
                <h3> Doctor Approval</h3>
              </div>

             </div>

            <div class="clearfix"></div>

             <!--Datagrid-->
                <div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
           <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                           
                <table id="datatable-responsive" class="table table-striped table-bordered dt-responsive" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th style="display:none">ID</th>
                            <th>First name</th>
                            <th>Last name</th>
                            <th>E-mail</th>
                            <th>Gender</th>
                            <th>Address</th>
                            <th>License Number</th>
                            <th>NPI Number</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>

                        @if (Model != null)
                        {

                            foreach (var item in Model)
                            {

                                 
                                <tr>
                                    <td class="docid">@item.doctorID</td>
                                    <td class="firstName" style="word-break: break-all; width: 300px">@item.firstName</td>
                                    <td class="lastName" style="word-break: break-all; width: 300px">@item.lastName</td>
                                    <td class="email" style="word-break: break-all; width: 300px">@item.email</td>
                                    <td class="gender">@item.gender</td>
                                    <td class="address" style="word-break: break-all;">@item.address1<br />@item.address2</td>
                                    <td class="licenseNumber" style="word-break: break-all; width: 300px">@item.licenseNumber</td>
                                    <td class="npiNumber" style="word-break: break-all;width: 300px">@item.npiNumber</td>
                                    <td style="width: 130px">
                                        @using (Html.BeginForm("ApproveDoctor", "Doctor_Admin",
                                        FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
                                         {
                                        <div class="btn-group">
                                            <input name="id" type="number" style="display:none" value="@item.doctorID">
                                            <input name="email" type="text" style="display:none" value="@item.email">
                                            <button type="submit" class="btn btn-primary">Approve</button>
                                             @*<button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                                <span class="caret"></span>
                                                <span class="sr-only">Toggle Dropdown</span>
                                            </button>
                                           <ul class="dropdown-menu" role="menu">
                                                <li>
                                                    <a class="editbtn">Reset</a>
                                                </li>
                                               <li><a class="editbtn">Delete</a> </li>
                                                <li> <input name="id" type="number" style="display:none" value="@item.doctorID"></li>
                                               <li> <button id="delete" type="submit" class="btn btn-success">Submit</button></li>
                                            </ul>*@
                                        </div>
                                        }
                                    </td>
                                       
                                </tr>
                                
                        }
                            }




                    </tbody>
                </table>
                       

                @* </div>*@
            </div>
        </div>

        @* </div>*@
    </div>
</div>
  
      
<!-- Data table Scripts -->
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/dataTables.buttons.min.js"></script>
    <script src="~/Scripts/buttons.bootstrap.min.js"></script>
    <script src="~/Scripts/buttons.flash.min.js"></script>
    <script src="~/Scripts/buttons.html5.min.js"></script>
    <script src="~/Scripts/buttons.print.min.js"></script>
    <script src="~/Scripts/dataTables.fixedHeader.min.js"></script>
    <script src="~/Scripts/dataTables.keyTable.min.js"></script>
    <script src="~/Scripts/dataTables.responsive.min.js"></script>
    <script src="~/Scripts/responsive.bootstrap.js"></script>
    <script src="~/Scripts/dataTables.scroller.min.js"></script>
    <script src="~/Scripts/validator.js"></script>
    
    <!-- Data table Scripts -->
      <!-- validator -->
    <script>
       
        
        //<!-- /Datatables -->
        var handleDataTableButtons = function () {
            if ($("#datatable-buttons").length) {
                $("#datatable-buttons").DataTable({
                    dom: "Bfrtip",
                    buttons: [
                      {
                          extend: "copy",
                          className: "btn-sm"
                      },
                      {
                          extend: "csv",
                          className: "btn-sm"
                      },
                      {
                          extend: "excel",
                          className: "btn-sm"
                      },
                      {
                          extend: "pdfHtml5",
                          className: "btn-sm"
                      },
                      {
                          extend: "print",
                          className: "btn-sm"
                      },
                    ],
                    responsive: true
                });
            }
        };

        TableManageButtons = function () {
            "use strict";
            return {
                init: function () {
                    handleDataTableButtons();
                }
            };
        }();

        $('#datatable').dataTable();

        $('#datatable-keytable').DataTable({
            keys: true
        });

        $('#datatable-responsive').DataTable({
            'order': [[0, 'desc']],
            'columnDefs': [
               { visible: false, targets: [0] },
            { visible: false, targets: [4] },
            { visible: false, targets: [5] }
               
            ]
        });

        $('#datatable-scroller').DataTable({
            ajax: "js/datatables/json/scroller-demo.json",
            deferRender: true,
            scrollY: 380,
            scrollCollapse: true,
            scroller: true
        });

        $('#datatable-fixed-header').DataTable({
            fixedHeader: true
        });

        var $datatable = $('#datatable-checkbox');

        $datatable.dataTable({
            'order': [[1, 'asc']],
            'columnDefs': [
              { orderable: false, targets: [0] }
            ]
        });
        $datatable.on('draw.dt', function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_flat-green'
            });
        });

        TableManageButtons.init();
        //<!-- /Datatables -->
      // initialize the validator function
      //validator.message.date = 'not a real date';

      // validate a field on "blur" event, a 'select' on 'change' event & a '.reuired' classed multifield on 'keyup':
      $('form')
        .on('blur', 'input[required], input.optional, select.required', validator.checkField)
        .on('change', 'select.required', validator.checkField)
        .on('keypress', 'input[required][pattern]', validator.keypress);

      //$('.multi.required').on('keyup blur', 'input', function() {
      //  validator.checkField.apply($(this).siblings().last()[0]);
      //});

     
     
      $('form').submit(function(e) {
        e.preventDefault();
        var submit = true;

        // evaluate the form using generic validaing
        if (!validator.checkAll($(this))) {
          submit = false;
        }

        if (submit)
          this.submit();

        return false;
      });
    </script>
    <!-- /validator -->

